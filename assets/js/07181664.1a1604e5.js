"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1867],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),b=i,f=p["".concat(c,".").concat(b)]||p[b]||u[b]||a;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6880:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:2,title:"4-bit Adder-Subtractor"},o=void 0,l={unversionedId:"lab-handouts/lab1",id:"lab-handouts/lab1",title:"4-bit Adder-Subtractor",description:"(i) - VHDL Description",source:"@site/docs/lab-handouts/lab1.mdx",sourceDirName:"lab-handouts",slug:"/lab-handouts/lab1",permalink:"/docs/lab-handouts/lab1",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"4-bit Adder-Subtractor"},sidebar:"docs",next:{title:"Mux",permalink:"/docs/lab-handouts/lab1_c"}},c={},s=[{value:"(i) - VHDL Description",id:"i---vhdl-description",level:3},{value:"(ii) Simulation",id:"ii-simulation",level:3}],d={toc:s};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"i---vhdl-description"},"(i) - VHDL Description"),(0,i.kt)("p",null,"You have been given a full adder description in the reference design. Using this full adder\nas a component, describe a 4-bit ripple carry adder-subtractor in VHDL. "),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"It is a simple binary adder-subtractor that can be implemented by cascading four 1-bit full\nadders such that the the carry generated by the addition of lower significant bits forms the\nincoming carry for addition of the next significant bits."),(0,i.kt)("p",{parentName:"div"},"If M = 0, output will be A + B",(0,i.kt)("br",null),"\nIf M = 1, output will be A - B"))),(0,i.kt)("div",{class:"fig_b"},(0,i.kt)("img",{src:n(1994).Z})),(0,i.kt)("h3",{id:"ii-simulation"},"(ii) Simulation"),(0,i.kt)("p",null," Simulate the adder using the generic testbench to confirm the correctness of your description.\nTo do this, note that you need to use the given tracefile and modify\nthe testbench given to you appropriately."),(0,i.kt)("hr",null),"Tracefile format ",(0,i.kt)("br",null),"<a3 a2 a1 a0><b3 b2 b1 b0><M> <Cout><S> 11111"," ",(0,i.kt)("br",null),(0,i.kt)("a",{href:"https://drive.google.com/drive/folders/118f9SOw_xYte5BZk31zeLvIgCcgCgXSy?usp=sharing"},"Tracefile \ud83d\udcc3"))}u.isMDXComponent=!0},1994:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/add_sub-2256aecc64123c72706d8efaa32f6a98.jpg"}}]);