(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1867],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return p}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=u(n),p=o,b=f["".concat(l,".").concat(p)]||f[p]||d[p]||a;return n?r.createElement(b,i(i({ref:t},s),{},{components:n})):r.createElement(b,i({ref:t},s))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8011:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l},default:function(){return s}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i={sidebar_position:2,title:"4-bit adder"},c={unversionedId:"lab-handouts/lab1",id:"lab-handouts/lab1",isDocsHomePage:!1,title:"4-bit adder",description:"1. You have been given a full adder description in the reference design. Using this full adder",source:"@site/docs/lab-handouts/lab1.mdx",sourceDirName:"lab-handouts",slug:"/lab-handouts/lab1",permalink:"/docs/lab-handouts/lab1",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"4-bit adder"},sidebar:"docs",next:{title:"Decoder",permalink:"/docs/lab-handouts/lab1_b"}},l=[],u={toc:l};function s(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"You have been given a full adder description in the reference design. Using this full adder\nas a component, describe a 4-bit ripple carry adder in VHDL. You may ignore input carry\nof LSB full adder.\nNote that it is a simple binary adder that can be implemented by cascading four 1-bit full\nadders such that the the carry generated by the addition of lower significant bits forms the\nincoming carry for addition of the next significant bits."),(0,a.kt)("li",{parentName:"ol"},"Simulate the adder using the generic testbench to confirm the correctness of your description.\nTo do this, note that you need to generate the tracefile for all 256 combinations and modify\nthe testbench given to you appropriately.")))}s.isMDXComponent=!0}}]);